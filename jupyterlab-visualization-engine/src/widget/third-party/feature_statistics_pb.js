// source: feature_statistics.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.featureStatistics.BytesStatistics', null, global);
goog.exportSymbol('proto.featureStatistics.CommonStatistics', null, global);
goog.exportSymbol('proto.featureStatistics.CustomStatistic', null, global);
goog.exportSymbol('proto.featureStatistics.CustomStatistic.ValCase', null, global);
goog.exportSymbol('proto.featureStatistics.DatasetFeatureStatistics', null, global);
goog.exportSymbol('proto.featureStatistics.DatasetFeatureStatisticsList', null, global);
goog.exportSymbol('proto.featureStatistics.FeatureNameStatistics', null, global);
goog.exportSymbol('proto.featureStatistics.FeatureNameStatistics.FieldIdCase', null, global);
goog.exportSymbol('proto.featureStatistics.FeatureNameStatistics.StatsCase', null, global);
goog.exportSymbol('proto.featureStatistics.FeatureNameStatistics.Type', null, global);
goog.exportSymbol('proto.featureStatistics.Histogram', null, global);
goog.exportSymbol('proto.featureStatistics.Histogram.Bucket', null, global);
goog.exportSymbol('proto.featureStatistics.Histogram.HistogramType', null, global);
goog.exportSymbol('proto.featureStatistics.NumericStatistics', null, global);
goog.exportSymbol('proto.featureStatistics.Path', null, global);
goog.exportSymbol('proto.featureStatistics.RankHistogram', null, global);
goog.exportSymbol('proto.featureStatistics.RankHistogram.Bucket', null, global);
goog.exportSymbol('proto.featureStatistics.StringStatistics', null, global);
goog.exportSymbol('proto.featureStatistics.StringStatistics.FreqAndValue', null, global);
goog.exportSymbol('proto.featureStatistics.StructStatistics', null, global);
goog.exportSymbol('proto.featureStatistics.WeightedCommonStatistics', null, global);
goog.exportSymbol('proto.featureStatistics.WeightedNumericStatistics', null, global);
goog.exportSymbol('proto.featureStatistics.WeightedStringStatistics', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.DatasetFeatureStatisticsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.featureStatistics.DatasetFeatureStatisticsList.repeatedFields_, null);
};
goog.inherits(proto.featureStatistics.DatasetFeatureStatisticsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.DatasetFeatureStatisticsList.displayName = 'proto.featureStatistics.DatasetFeatureStatisticsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.Path = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.featureStatistics.Path.repeatedFields_, null);
};
goog.inherits(proto.featureStatistics.Path, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.Path.displayName = 'proto.featureStatistics.Path';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.DatasetFeatureStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.featureStatistics.DatasetFeatureStatistics.repeatedFields_, null);
};
goog.inherits(proto.featureStatistics.DatasetFeatureStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.DatasetFeatureStatistics.displayName = 'proto.featureStatistics.DatasetFeatureStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.FeatureNameStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.featureStatistics.FeatureNameStatistics.repeatedFields_, proto.featureStatistics.FeatureNameStatistics.oneofGroups_);
};
goog.inherits(proto.featureStatistics.FeatureNameStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.FeatureNameStatistics.displayName = 'proto.featureStatistics.FeatureNameStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.WeightedCommonStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.featureStatistics.WeightedCommonStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.WeightedCommonStatistics.displayName = 'proto.featureStatistics.WeightedCommonStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.CustomStatistic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.featureStatistics.CustomStatistic.oneofGroups_);
};
goog.inherits(proto.featureStatistics.CustomStatistic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.CustomStatistic.displayName = 'proto.featureStatistics.CustomStatistic';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.NumericStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.featureStatistics.NumericStatistics.repeatedFields_, null);
};
goog.inherits(proto.featureStatistics.NumericStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.NumericStatistics.displayName = 'proto.featureStatistics.NumericStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.StringStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.featureStatistics.StringStatistics.repeatedFields_, null);
};
goog.inherits(proto.featureStatistics.StringStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.StringStatistics.displayName = 'proto.featureStatistics.StringStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.StringStatistics.FreqAndValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.featureStatistics.StringStatistics.FreqAndValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.StringStatistics.FreqAndValue.displayName = 'proto.featureStatistics.StringStatistics.FreqAndValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.WeightedNumericStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.featureStatistics.WeightedNumericStatistics.repeatedFields_, null);
};
goog.inherits(proto.featureStatistics.WeightedNumericStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.WeightedNumericStatistics.displayName = 'proto.featureStatistics.WeightedNumericStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.WeightedStringStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.featureStatistics.WeightedStringStatistics.repeatedFields_, null);
};
goog.inherits(proto.featureStatistics.WeightedStringStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.WeightedStringStatistics.displayName = 'proto.featureStatistics.WeightedStringStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.BytesStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.featureStatistics.BytesStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.BytesStatistics.displayName = 'proto.featureStatistics.BytesStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.StructStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.featureStatistics.StructStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.StructStatistics.displayName = 'proto.featureStatistics.StructStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.CommonStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.featureStatistics.CommonStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.CommonStatistics.displayName = 'proto.featureStatistics.CommonStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.Histogram = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.featureStatistics.Histogram.repeatedFields_, null);
};
goog.inherits(proto.featureStatistics.Histogram, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.Histogram.displayName = 'proto.featureStatistics.Histogram';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.Histogram.Bucket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.featureStatistics.Histogram.Bucket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.Histogram.Bucket.displayName = 'proto.featureStatistics.Histogram.Bucket';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.RankHistogram = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.featureStatistics.RankHistogram.repeatedFields_, null);
};
goog.inherits(proto.featureStatistics.RankHistogram, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.RankHistogram.displayName = 'proto.featureStatistics.RankHistogram';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.featureStatistics.RankHistogram.Bucket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.featureStatistics.RankHistogram.Bucket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.featureStatistics.RankHistogram.Bucket.displayName = 'proto.featureStatistics.RankHistogram.Bucket';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.featureStatistics.DatasetFeatureStatisticsList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.DatasetFeatureStatisticsList.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.DatasetFeatureStatisticsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.DatasetFeatureStatisticsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.DatasetFeatureStatisticsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    datasetsList: jspb.Message.toObjectList(msg.getDatasetsList(),
    proto.featureStatistics.DatasetFeatureStatistics.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.DatasetFeatureStatisticsList}
 */
proto.featureStatistics.DatasetFeatureStatisticsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.DatasetFeatureStatisticsList;
  return proto.featureStatistics.DatasetFeatureStatisticsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.DatasetFeatureStatisticsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.DatasetFeatureStatisticsList}
 */
proto.featureStatistics.DatasetFeatureStatisticsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.featureStatistics.DatasetFeatureStatistics;
      reader.readMessage(value,proto.featureStatistics.DatasetFeatureStatistics.deserializeBinaryFromReader);
      msg.addDatasets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.DatasetFeatureStatisticsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.DatasetFeatureStatisticsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.DatasetFeatureStatisticsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.DatasetFeatureStatisticsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatasetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.featureStatistics.DatasetFeatureStatistics.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DatasetFeatureStatistics datasets = 1;
 * @return {!Array<!proto.featureStatistics.DatasetFeatureStatistics>}
 */
proto.featureStatistics.DatasetFeatureStatisticsList.prototype.getDatasetsList = function() {
  return /** @type{!Array<!proto.featureStatistics.DatasetFeatureStatistics>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.featureStatistics.DatasetFeatureStatistics, 1));
};


/**
 * @param {!Array<!proto.featureStatistics.DatasetFeatureStatistics>} value
 * @return {!proto.featureStatistics.DatasetFeatureStatisticsList} returns this
*/
proto.featureStatistics.DatasetFeatureStatisticsList.prototype.setDatasetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.featureStatistics.DatasetFeatureStatistics=} opt_value
 * @param {number=} opt_index
 * @return {!proto.featureStatistics.DatasetFeatureStatistics}
 */
proto.featureStatistics.DatasetFeatureStatisticsList.prototype.addDatasets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.featureStatistics.DatasetFeatureStatistics, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.featureStatistics.DatasetFeatureStatisticsList} returns this
 */
proto.featureStatistics.DatasetFeatureStatisticsList.prototype.clearDatasetsList = function() {
  return this.setDatasetsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.featureStatistics.Path.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.Path.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.Path.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.Path} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.Path.toObject = function(includeInstance, msg) {
  var f, obj = {
    stepList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.Path}
 */
proto.featureStatistics.Path.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.Path;
  return proto.featureStatistics.Path.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.Path} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.Path}
 */
proto.featureStatistics.Path.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addStep(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.Path.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.Path.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.Path} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.Path.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStepList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string step = 1;
 * @return {!Array<string>}
 */
proto.featureStatistics.Path.prototype.getStepList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.featureStatistics.Path} returns this
 */
proto.featureStatistics.Path.prototype.setStepList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.featureStatistics.Path} returns this
 */
proto.featureStatistics.Path.prototype.addStep = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.featureStatistics.Path} returns this
 */
proto.featureStatistics.Path.prototype.clearStepList = function() {
  return this.setStepList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.featureStatistics.DatasetFeatureStatistics.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.DatasetFeatureStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.DatasetFeatureStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.DatasetFeatureStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.DatasetFeatureStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    numExamples: jspb.Message.getFieldWithDefault(msg, 2, 0),
    weightedNumExamples: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    featuresList: jspb.Message.toObjectList(msg.getFeaturesList(),
    proto.featureStatistics.FeatureNameStatistics.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.DatasetFeatureStatistics}
 */
proto.featureStatistics.DatasetFeatureStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.DatasetFeatureStatistics;
  return proto.featureStatistics.DatasetFeatureStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.DatasetFeatureStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.DatasetFeatureStatistics}
 */
proto.featureStatistics.DatasetFeatureStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumExamples(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWeightedNumExamples(value);
      break;
    case 3:
      var value = new proto.featureStatistics.FeatureNameStatistics;
      reader.readMessage(value,proto.featureStatistics.FeatureNameStatistics.deserializeBinaryFromReader);
      msg.addFeatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.DatasetFeatureStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.DatasetFeatureStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.DatasetFeatureStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.DatasetFeatureStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumExamples();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getWeightedNumExamples();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.featureStatistics.FeatureNameStatistics.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.featureStatistics.DatasetFeatureStatistics.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.featureStatistics.DatasetFeatureStatistics} returns this
 */
proto.featureStatistics.DatasetFeatureStatistics.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 num_examples = 2;
 * @return {number}
 */
proto.featureStatistics.DatasetFeatureStatistics.prototype.getNumExamples = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.DatasetFeatureStatistics} returns this
 */
proto.featureStatistics.DatasetFeatureStatistics.prototype.setNumExamples = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double weighted_num_examples = 4;
 * @return {number}
 */
proto.featureStatistics.DatasetFeatureStatistics.prototype.getWeightedNumExamples = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.DatasetFeatureStatistics} returns this
 */
proto.featureStatistics.DatasetFeatureStatistics.prototype.setWeightedNumExamples = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * repeated FeatureNameStatistics features = 3;
 * @return {!Array<!proto.featureStatistics.FeatureNameStatistics>}
 */
proto.featureStatistics.DatasetFeatureStatistics.prototype.getFeaturesList = function() {
  return /** @type{!Array<!proto.featureStatistics.FeatureNameStatistics>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.featureStatistics.FeatureNameStatistics, 3));
};


/**
 * @param {!Array<!proto.featureStatistics.FeatureNameStatistics>} value
 * @return {!proto.featureStatistics.DatasetFeatureStatistics} returns this
*/
proto.featureStatistics.DatasetFeatureStatistics.prototype.setFeaturesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.featureStatistics.FeatureNameStatistics=} opt_value
 * @param {number=} opt_index
 * @return {!proto.featureStatistics.FeatureNameStatistics}
 */
proto.featureStatistics.DatasetFeatureStatistics.prototype.addFeatures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.featureStatistics.FeatureNameStatistics, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.featureStatistics.DatasetFeatureStatistics} returns this
 */
proto.featureStatistics.DatasetFeatureStatistics.prototype.clearFeaturesList = function() {
  return this.setFeaturesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.featureStatistics.FeatureNameStatistics.repeatedFields_ = [6];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.featureStatistics.FeatureNameStatistics.oneofGroups_ = [[1,8],[3,4,5,7]];

/**
 * @enum {number}
 */
proto.featureStatistics.FeatureNameStatistics.FieldIdCase = {
  FIELD_ID_NOT_SET: 0,
  NAME: 1,
  PATH: 8
};

/**
 * @return {proto.featureStatistics.FeatureNameStatistics.FieldIdCase}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.getFieldIdCase = function() {
  return /** @type {proto.featureStatistics.FeatureNameStatistics.FieldIdCase} */(jspb.Message.computeOneofCase(this, proto.featureStatistics.FeatureNameStatistics.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.featureStatistics.FeatureNameStatistics.StatsCase = {
  STATS_NOT_SET: 0,
  NUM_STATS: 3,
  STRING_STATS: 4,
  BYTES_STATS: 5,
  STRUCT_STATS: 7
};

/**
 * @return {proto.featureStatistics.FeatureNameStatistics.StatsCase}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.getStatsCase = function() {
  return /** @type {proto.featureStatistics.FeatureNameStatistics.StatsCase} */(jspb.Message.computeOneofCase(this, proto.featureStatistics.FeatureNameStatistics.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.FeatureNameStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.FeatureNameStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.FeatureNameStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: (f = msg.getPath()) && proto.featureStatistics.Path.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    numStats: (f = msg.getNumStats()) && proto.featureStatistics.NumericStatistics.toObject(includeInstance, f),
    stringStats: (f = msg.getStringStats()) && proto.featureStatistics.StringStatistics.toObject(includeInstance, f),
    bytesStats: (f = msg.getBytesStats()) && proto.featureStatistics.BytesStatistics.toObject(includeInstance, f),
    structStats: (f = msg.getStructStats()) && proto.featureStatistics.StructStatistics.toObject(includeInstance, f),
    customStatsList: jspb.Message.toObjectList(msg.getCustomStatsList(),
    proto.featureStatistics.CustomStatistic.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.FeatureNameStatistics}
 */
proto.featureStatistics.FeatureNameStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.FeatureNameStatistics;
  return proto.featureStatistics.FeatureNameStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.FeatureNameStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.FeatureNameStatistics}
 */
proto.featureStatistics.FeatureNameStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 8:
      var value = new proto.featureStatistics.Path;
      reader.readMessage(value,proto.featureStatistics.Path.deserializeBinaryFromReader);
      msg.setPath(value);
      break;
    case 2:
      var value = /** @type {!proto.featureStatistics.FeatureNameStatistics.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.featureStatistics.NumericStatistics;
      reader.readMessage(value,proto.featureStatistics.NumericStatistics.deserializeBinaryFromReader);
      msg.setNumStats(value);
      break;
    case 4:
      var value = new proto.featureStatistics.StringStatistics;
      reader.readMessage(value,proto.featureStatistics.StringStatistics.deserializeBinaryFromReader);
      msg.setStringStats(value);
      break;
    case 5:
      var value = new proto.featureStatistics.BytesStatistics;
      reader.readMessage(value,proto.featureStatistics.BytesStatistics.deserializeBinaryFromReader);
      msg.setBytesStats(value);
      break;
    case 7:
      var value = new proto.featureStatistics.StructStatistics;
      reader.readMessage(value,proto.featureStatistics.StructStatistics.deserializeBinaryFromReader);
      msg.setStructStats(value);
      break;
    case 6:
      var value = new proto.featureStatistics.CustomStatistic;
      reader.readMessage(value,proto.featureStatistics.CustomStatistic.deserializeBinaryFromReader);
      msg.addCustomStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.FeatureNameStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.FeatureNameStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.FeatureNameStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.featureStatistics.Path.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getNumStats();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.featureStatistics.NumericStatistics.serializeBinaryToWriter
    );
  }
  f = message.getStringStats();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.featureStatistics.StringStatistics.serializeBinaryToWriter
    );
  }
  f = message.getBytesStats();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.featureStatistics.BytesStatistics.serializeBinaryToWriter
    );
  }
  f = message.getStructStats();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.featureStatistics.StructStatistics.serializeBinaryToWriter
    );
  }
  f = message.getCustomStatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.featureStatistics.CustomStatistic.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.featureStatistics.FeatureNameStatistics.Type = {
  INT: 0,
  FLOAT: 1,
  STRING: 2,
  BYTES: 3,
  STRUCT: 4
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
 */
proto.featureStatistics.FeatureNameStatistics.prototype.setName = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.featureStatistics.FeatureNameStatistics.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
 */
proto.featureStatistics.FeatureNameStatistics.prototype.clearName = function() {
  return jspb.Message.setOneofField(this, 1, proto.featureStatistics.FeatureNameStatistics.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Path path = 8;
 * @return {?proto.featureStatistics.Path}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.getPath = function() {
  return /** @type{?proto.featureStatistics.Path} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.Path, 8));
};


/**
 * @param {?proto.featureStatistics.Path|undefined} value
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
*/
proto.featureStatistics.FeatureNameStatistics.prototype.setPath = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.featureStatistics.FeatureNameStatistics.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
 */
proto.featureStatistics.FeatureNameStatistics.prototype.clearPath = function() {
  return this.setPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.hasPath = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Type type = 2;
 * @return {!proto.featureStatistics.FeatureNameStatistics.Type}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.getType = function() {
  return /** @type {!proto.featureStatistics.FeatureNameStatistics.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.featureStatistics.FeatureNameStatistics.Type} value
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
 */
proto.featureStatistics.FeatureNameStatistics.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional NumericStatistics num_stats = 3;
 * @return {?proto.featureStatistics.NumericStatistics}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.getNumStats = function() {
  return /** @type{?proto.featureStatistics.NumericStatistics} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.NumericStatistics, 3));
};


/**
 * @param {?proto.featureStatistics.NumericStatistics|undefined} value
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
*/
proto.featureStatistics.FeatureNameStatistics.prototype.setNumStats = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.featureStatistics.FeatureNameStatistics.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
 */
proto.featureStatistics.FeatureNameStatistics.prototype.clearNumStats = function() {
  return this.setNumStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.hasNumStats = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional StringStatistics string_stats = 4;
 * @return {?proto.featureStatistics.StringStatistics}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.getStringStats = function() {
  return /** @type{?proto.featureStatistics.StringStatistics} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.StringStatistics, 4));
};


/**
 * @param {?proto.featureStatistics.StringStatistics|undefined} value
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
*/
proto.featureStatistics.FeatureNameStatistics.prototype.setStringStats = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.featureStatistics.FeatureNameStatistics.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
 */
proto.featureStatistics.FeatureNameStatistics.prototype.clearStringStats = function() {
  return this.setStringStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.hasStringStats = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional BytesStatistics bytes_stats = 5;
 * @return {?proto.featureStatistics.BytesStatistics}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.getBytesStats = function() {
  return /** @type{?proto.featureStatistics.BytesStatistics} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.BytesStatistics, 5));
};


/**
 * @param {?proto.featureStatistics.BytesStatistics|undefined} value
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
*/
proto.featureStatistics.FeatureNameStatistics.prototype.setBytesStats = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.featureStatistics.FeatureNameStatistics.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
 */
proto.featureStatistics.FeatureNameStatistics.prototype.clearBytesStats = function() {
  return this.setBytesStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.hasBytesStats = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional StructStatistics struct_stats = 7;
 * @return {?proto.featureStatistics.StructStatistics}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.getStructStats = function() {
  return /** @type{?proto.featureStatistics.StructStatistics} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.StructStatistics, 7));
};


/**
 * @param {?proto.featureStatistics.StructStatistics|undefined} value
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
*/
proto.featureStatistics.FeatureNameStatistics.prototype.setStructStats = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.featureStatistics.FeatureNameStatistics.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
 */
proto.featureStatistics.FeatureNameStatistics.prototype.clearStructStats = function() {
  return this.setStructStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.hasStructStats = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated CustomStatistic custom_stats = 6;
 * @return {!Array<!proto.featureStatistics.CustomStatistic>}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.getCustomStatsList = function() {
  return /** @type{!Array<!proto.featureStatistics.CustomStatistic>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.featureStatistics.CustomStatistic, 6));
};


/**
 * @param {!Array<!proto.featureStatistics.CustomStatistic>} value
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
*/
proto.featureStatistics.FeatureNameStatistics.prototype.setCustomStatsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.featureStatistics.CustomStatistic=} opt_value
 * @param {number=} opt_index
 * @return {!proto.featureStatistics.CustomStatistic}
 */
proto.featureStatistics.FeatureNameStatistics.prototype.addCustomStats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.featureStatistics.CustomStatistic, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.featureStatistics.FeatureNameStatistics} returns this
 */
proto.featureStatistics.FeatureNameStatistics.prototype.clearCustomStatsList = function() {
  return this.setCustomStatsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.WeightedCommonStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.WeightedCommonStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.WeightedCommonStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.WeightedCommonStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    numNonMissing: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    numMissing: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    avgNumValues: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    totNumValues: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.WeightedCommonStatistics}
 */
proto.featureStatistics.WeightedCommonStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.WeightedCommonStatistics;
  return proto.featureStatistics.WeightedCommonStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.WeightedCommonStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.WeightedCommonStatistics}
 */
proto.featureStatistics.WeightedCommonStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNumNonMissing(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNumMissing(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAvgNumValues(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotNumValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.WeightedCommonStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.WeightedCommonStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.WeightedCommonStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.WeightedCommonStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumNonMissing();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getNumMissing();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getAvgNumValues();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTotNumValues();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double num_non_missing = 1;
 * @return {number}
 */
proto.featureStatistics.WeightedCommonStatistics.prototype.getNumNonMissing = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.WeightedCommonStatistics} returns this
 */
proto.featureStatistics.WeightedCommonStatistics.prototype.setNumNonMissing = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double num_missing = 2;
 * @return {number}
 */
proto.featureStatistics.WeightedCommonStatistics.prototype.getNumMissing = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.WeightedCommonStatistics} returns this
 */
proto.featureStatistics.WeightedCommonStatistics.prototype.setNumMissing = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double avg_num_values = 3;
 * @return {number}
 */
proto.featureStatistics.WeightedCommonStatistics.prototype.getAvgNumValues = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.WeightedCommonStatistics} returns this
 */
proto.featureStatistics.WeightedCommonStatistics.prototype.setAvgNumValues = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double tot_num_values = 4;
 * @return {number}
 */
proto.featureStatistics.WeightedCommonStatistics.prototype.getTotNumValues = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.WeightedCommonStatistics} returns this
 */
proto.featureStatistics.WeightedCommonStatistics.prototype.setTotNumValues = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.featureStatistics.CustomStatistic.oneofGroups_ = [[2,3,4,5]];

/**
 * @enum {number}
 */
proto.featureStatistics.CustomStatistic.ValCase = {
  VAL_NOT_SET: 0,
  NUM: 2,
  STR: 3,
  HISTOGRAM: 4,
  RANK_HISTOGRAM: 5
};

/**
 * @return {proto.featureStatistics.CustomStatistic.ValCase}
 */
proto.featureStatistics.CustomStatistic.prototype.getValCase = function() {
  return /** @type {proto.featureStatistics.CustomStatistic.ValCase} */(jspb.Message.computeOneofCase(this, proto.featureStatistics.CustomStatistic.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.CustomStatistic.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.CustomStatistic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.CustomStatistic} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.CustomStatistic.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    num: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    str: jspb.Message.getFieldWithDefault(msg, 3, ""),
    histogram: (f = msg.getHistogram()) && proto.featureStatistics.Histogram.toObject(includeInstance, f),
    rankHistogram: (f = msg.getRankHistogram()) && proto.featureStatistics.RankHistogram.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.CustomStatistic}
 */
proto.featureStatistics.CustomStatistic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.CustomStatistic;
  return proto.featureStatistics.CustomStatistic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.CustomStatistic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.CustomStatistic}
 */
proto.featureStatistics.CustomStatistic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNum(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr(value);
      break;
    case 4:
      var value = new proto.featureStatistics.Histogram;
      reader.readMessage(value,proto.featureStatistics.Histogram.deserializeBinaryFromReader);
      msg.setHistogram(value);
      break;
    case 5:
      var value = new proto.featureStatistics.RankHistogram;
      reader.readMessage(value,proto.featureStatistics.RankHistogram.deserializeBinaryFromReader);
      msg.setRankHistogram(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.CustomStatistic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.CustomStatistic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.CustomStatistic} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.CustomStatistic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHistogram();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.featureStatistics.Histogram.serializeBinaryToWriter
    );
  }
  f = message.getRankHistogram();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.featureStatistics.RankHistogram.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.featureStatistics.CustomStatistic.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.featureStatistics.CustomStatistic} returns this
 */
proto.featureStatistics.CustomStatistic.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double num = 2;
 * @return {number}
 */
proto.featureStatistics.CustomStatistic.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.CustomStatistic} returns this
 */
proto.featureStatistics.CustomStatistic.prototype.setNum = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.featureStatistics.CustomStatistic.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.featureStatistics.CustomStatistic} returns this
 */
proto.featureStatistics.CustomStatistic.prototype.clearNum = function() {
  return jspb.Message.setOneofField(this, 2, proto.featureStatistics.CustomStatistic.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.CustomStatistic.prototype.hasNum = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string str = 3;
 * @return {string}
 */
proto.featureStatistics.CustomStatistic.prototype.getStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.featureStatistics.CustomStatistic} returns this
 */
proto.featureStatistics.CustomStatistic.prototype.setStr = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.featureStatistics.CustomStatistic.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.featureStatistics.CustomStatistic} returns this
 */
proto.featureStatistics.CustomStatistic.prototype.clearStr = function() {
  return jspb.Message.setOneofField(this, 3, proto.featureStatistics.CustomStatistic.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.CustomStatistic.prototype.hasStr = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Histogram histogram = 4;
 * @return {?proto.featureStatistics.Histogram}
 */
proto.featureStatistics.CustomStatistic.prototype.getHistogram = function() {
  return /** @type{?proto.featureStatistics.Histogram} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.Histogram, 4));
};


/**
 * @param {?proto.featureStatistics.Histogram|undefined} value
 * @return {!proto.featureStatistics.CustomStatistic} returns this
*/
proto.featureStatistics.CustomStatistic.prototype.setHistogram = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.featureStatistics.CustomStatistic.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.CustomStatistic} returns this
 */
proto.featureStatistics.CustomStatistic.prototype.clearHistogram = function() {
  return this.setHistogram(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.CustomStatistic.prototype.hasHistogram = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RankHistogram rank_histogram = 5;
 * @return {?proto.featureStatistics.RankHistogram}
 */
proto.featureStatistics.CustomStatistic.prototype.getRankHistogram = function() {
  return /** @type{?proto.featureStatistics.RankHistogram} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.RankHistogram, 5));
};


/**
 * @param {?proto.featureStatistics.RankHistogram|undefined} value
 * @return {!proto.featureStatistics.CustomStatistic} returns this
*/
proto.featureStatistics.CustomStatistic.prototype.setRankHistogram = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.featureStatistics.CustomStatistic.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.CustomStatistic} returns this
 */
proto.featureStatistics.CustomStatistic.prototype.clearRankHistogram = function() {
  return this.setRankHistogram(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.CustomStatistic.prototype.hasRankHistogram = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.featureStatistics.NumericStatistics.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.NumericStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.NumericStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.NumericStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.NumericStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonStats: (f = msg.getCommonStats()) && proto.featureStatistics.CommonStatistics.toObject(includeInstance, f),
    mean: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    stdDev: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    numZeros: jspb.Message.getFieldWithDefault(msg, 4, 0),
    min: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    median: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    max: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    histogramsList: jspb.Message.toObjectList(msg.getHistogramsList(),
    proto.featureStatistics.Histogram.toObject, includeInstance),
    weightedNumericStats: (f = msg.getWeightedNumericStats()) && proto.featureStatistics.WeightedNumericStatistics.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.NumericStatistics}
 */
proto.featureStatistics.NumericStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.NumericStatistics;
  return proto.featureStatistics.NumericStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.NumericStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.NumericStatistics}
 */
proto.featureStatistics.NumericStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.featureStatistics.CommonStatistics;
      reader.readMessage(value,proto.featureStatistics.CommonStatistics.deserializeBinaryFromReader);
      msg.setCommonStats(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMean(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStdDev(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumZeros(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMin(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMedian(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMax(value);
      break;
    case 8:
      var value = new proto.featureStatistics.Histogram;
      reader.readMessage(value,proto.featureStatistics.Histogram.deserializeBinaryFromReader);
      msg.addHistograms(value);
      break;
    case 9:
      var value = new proto.featureStatistics.WeightedNumericStatistics;
      reader.readMessage(value,proto.featureStatistics.WeightedNumericStatistics.deserializeBinaryFromReader);
      msg.setWeightedNumericStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.NumericStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.NumericStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.NumericStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.NumericStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonStats();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.featureStatistics.CommonStatistics.serializeBinaryToWriter
    );
  }
  f = message.getMean();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getStdDev();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getNumZeros();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getMin();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getMedian();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getMax();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getHistogramsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.featureStatistics.Histogram.serializeBinaryToWriter
    );
  }
  f = message.getWeightedNumericStats();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.featureStatistics.WeightedNumericStatistics.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonStatistics common_stats = 1;
 * @return {?proto.featureStatistics.CommonStatistics}
 */
proto.featureStatistics.NumericStatistics.prototype.getCommonStats = function() {
  return /** @type{?proto.featureStatistics.CommonStatistics} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.CommonStatistics, 1));
};


/**
 * @param {?proto.featureStatistics.CommonStatistics|undefined} value
 * @return {!proto.featureStatistics.NumericStatistics} returns this
*/
proto.featureStatistics.NumericStatistics.prototype.setCommonStats = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.NumericStatistics} returns this
 */
proto.featureStatistics.NumericStatistics.prototype.clearCommonStats = function() {
  return this.setCommonStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.NumericStatistics.prototype.hasCommonStats = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double mean = 2;
 * @return {number}
 */
proto.featureStatistics.NumericStatistics.prototype.getMean = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.NumericStatistics} returns this
 */
proto.featureStatistics.NumericStatistics.prototype.setMean = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double std_dev = 3;
 * @return {number}
 */
proto.featureStatistics.NumericStatistics.prototype.getStdDev = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.NumericStatistics} returns this
 */
proto.featureStatistics.NumericStatistics.prototype.setStdDev = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional uint64 num_zeros = 4;
 * @return {number}
 */
proto.featureStatistics.NumericStatistics.prototype.getNumZeros = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.NumericStatistics} returns this
 */
proto.featureStatistics.NumericStatistics.prototype.setNumZeros = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double min = 5;
 * @return {number}
 */
proto.featureStatistics.NumericStatistics.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.NumericStatistics} returns this
 */
proto.featureStatistics.NumericStatistics.prototype.setMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double median = 6;
 * @return {number}
 */
proto.featureStatistics.NumericStatistics.prototype.getMedian = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.NumericStatistics} returns this
 */
proto.featureStatistics.NumericStatistics.prototype.setMedian = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double max = 7;
 * @return {number}
 */
proto.featureStatistics.NumericStatistics.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.NumericStatistics} returns this
 */
proto.featureStatistics.NumericStatistics.prototype.setMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * repeated Histogram histograms = 8;
 * @return {!Array<!proto.featureStatistics.Histogram>}
 */
proto.featureStatistics.NumericStatistics.prototype.getHistogramsList = function() {
  return /** @type{!Array<!proto.featureStatistics.Histogram>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.featureStatistics.Histogram, 8));
};


/**
 * @param {!Array<!proto.featureStatistics.Histogram>} value
 * @return {!proto.featureStatistics.NumericStatistics} returns this
*/
proto.featureStatistics.NumericStatistics.prototype.setHistogramsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.featureStatistics.Histogram=} opt_value
 * @param {number=} opt_index
 * @return {!proto.featureStatistics.Histogram}
 */
proto.featureStatistics.NumericStatistics.prototype.addHistograms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.featureStatistics.Histogram, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.featureStatistics.NumericStatistics} returns this
 */
proto.featureStatistics.NumericStatistics.prototype.clearHistogramsList = function() {
  return this.setHistogramsList([]);
};


/**
 * optional WeightedNumericStatistics weighted_numeric_stats = 9;
 * @return {?proto.featureStatistics.WeightedNumericStatistics}
 */
proto.featureStatistics.NumericStatistics.prototype.getWeightedNumericStats = function() {
  return /** @type{?proto.featureStatistics.WeightedNumericStatistics} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.WeightedNumericStatistics, 9));
};


/**
 * @param {?proto.featureStatistics.WeightedNumericStatistics|undefined} value
 * @return {!proto.featureStatistics.NumericStatistics} returns this
*/
proto.featureStatistics.NumericStatistics.prototype.setWeightedNumericStats = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.NumericStatistics} returns this
 */
proto.featureStatistics.NumericStatistics.prototype.clearWeightedNumericStats = function() {
  return this.setWeightedNumericStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.NumericStatistics.prototype.hasWeightedNumericStats = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.featureStatistics.StringStatistics.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.StringStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.StringStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.StringStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.StringStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonStats: (f = msg.getCommonStats()) && proto.featureStatistics.CommonStatistics.toObject(includeInstance, f),
    unique: jspb.Message.getFieldWithDefault(msg, 2, 0),
    topValuesList: jspb.Message.toObjectList(msg.getTopValuesList(),
    proto.featureStatistics.StringStatistics.FreqAndValue.toObject, includeInstance),
    avgLength: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    rankHistogram: (f = msg.getRankHistogram()) && proto.featureStatistics.RankHistogram.toObject(includeInstance, f),
    weightedStringStats: (f = msg.getWeightedStringStats()) && proto.featureStatistics.WeightedStringStatistics.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.StringStatistics}
 */
proto.featureStatistics.StringStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.StringStatistics;
  return proto.featureStatistics.StringStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.StringStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.StringStatistics}
 */
proto.featureStatistics.StringStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.featureStatistics.CommonStatistics;
      reader.readMessage(value,proto.featureStatistics.CommonStatistics.deserializeBinaryFromReader);
      msg.setCommonStats(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnique(value);
      break;
    case 3:
      var value = new proto.featureStatistics.StringStatistics.FreqAndValue;
      reader.readMessage(value,proto.featureStatistics.StringStatistics.FreqAndValue.deserializeBinaryFromReader);
      msg.addTopValues(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAvgLength(value);
      break;
    case 5:
      var value = new proto.featureStatistics.RankHistogram;
      reader.readMessage(value,proto.featureStatistics.RankHistogram.deserializeBinaryFromReader);
      msg.setRankHistogram(value);
      break;
    case 6:
      var value = new proto.featureStatistics.WeightedStringStatistics;
      reader.readMessage(value,proto.featureStatistics.WeightedStringStatistics.deserializeBinaryFromReader);
      msg.setWeightedStringStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.StringStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.StringStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.StringStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.StringStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonStats();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.featureStatistics.CommonStatistics.serializeBinaryToWriter
    );
  }
  f = message.getUnique();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTopValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.featureStatistics.StringStatistics.FreqAndValue.serializeBinaryToWriter
    );
  }
  f = message.getAvgLength();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getRankHistogram();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.featureStatistics.RankHistogram.serializeBinaryToWriter
    );
  }
  f = message.getWeightedStringStats();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.featureStatistics.WeightedStringStatistics.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.StringStatistics.FreqAndValue.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.StringStatistics.FreqAndValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.StringStatistics.FreqAndValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.StringStatistics.FreqAndValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    deprecatedFreq: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    frequency: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.StringStatistics.FreqAndValue}
 */
proto.featureStatistics.StringStatistics.FreqAndValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.StringStatistics.FreqAndValue;
  return proto.featureStatistics.StringStatistics.FreqAndValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.StringStatistics.FreqAndValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.StringStatistics.FreqAndValue}
 */
proto.featureStatistics.StringStatistics.FreqAndValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeprecatedFreq(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFrequency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.StringStatistics.FreqAndValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.StringStatistics.FreqAndValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.StringStatistics.FreqAndValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.StringStatistics.FreqAndValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeprecatedFreq();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrequency();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional uint64 deprecated_freq = 1;
 * @return {number}
 */
proto.featureStatistics.StringStatistics.FreqAndValue.prototype.getDeprecatedFreq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.StringStatistics.FreqAndValue} returns this
 */
proto.featureStatistics.StringStatistics.FreqAndValue.prototype.setDeprecatedFreq = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.featureStatistics.StringStatistics.FreqAndValue.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.featureStatistics.StringStatistics.FreqAndValue} returns this
 */
proto.featureStatistics.StringStatistics.FreqAndValue.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double frequency = 3;
 * @return {number}
 */
proto.featureStatistics.StringStatistics.FreqAndValue.prototype.getFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.StringStatistics.FreqAndValue} returns this
 */
proto.featureStatistics.StringStatistics.FreqAndValue.prototype.setFrequency = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional CommonStatistics common_stats = 1;
 * @return {?proto.featureStatistics.CommonStatistics}
 */
proto.featureStatistics.StringStatistics.prototype.getCommonStats = function() {
  return /** @type{?proto.featureStatistics.CommonStatistics} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.CommonStatistics, 1));
};


/**
 * @param {?proto.featureStatistics.CommonStatistics|undefined} value
 * @return {!proto.featureStatistics.StringStatistics} returns this
*/
proto.featureStatistics.StringStatistics.prototype.setCommonStats = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.StringStatistics} returns this
 */
proto.featureStatistics.StringStatistics.prototype.clearCommonStats = function() {
  return this.setCommonStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.StringStatistics.prototype.hasCommonStats = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 unique = 2;
 * @return {number}
 */
proto.featureStatistics.StringStatistics.prototype.getUnique = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.StringStatistics} returns this
 */
proto.featureStatistics.StringStatistics.prototype.setUnique = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated FreqAndValue top_values = 3;
 * @return {!Array<!proto.featureStatistics.StringStatistics.FreqAndValue>}
 */
proto.featureStatistics.StringStatistics.prototype.getTopValuesList = function() {
  return /** @type{!Array<!proto.featureStatistics.StringStatistics.FreqAndValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.featureStatistics.StringStatistics.FreqAndValue, 3));
};


/**
 * @param {!Array<!proto.featureStatistics.StringStatistics.FreqAndValue>} value
 * @return {!proto.featureStatistics.StringStatistics} returns this
*/
proto.featureStatistics.StringStatistics.prototype.setTopValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.featureStatistics.StringStatistics.FreqAndValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.featureStatistics.StringStatistics.FreqAndValue}
 */
proto.featureStatistics.StringStatistics.prototype.addTopValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.featureStatistics.StringStatistics.FreqAndValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.featureStatistics.StringStatistics} returns this
 */
proto.featureStatistics.StringStatistics.prototype.clearTopValuesList = function() {
  return this.setTopValuesList([]);
};


/**
 * optional float avg_length = 4;
 * @return {number}
 */
proto.featureStatistics.StringStatistics.prototype.getAvgLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.StringStatistics} returns this
 */
proto.featureStatistics.StringStatistics.prototype.setAvgLength = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional RankHistogram rank_histogram = 5;
 * @return {?proto.featureStatistics.RankHistogram}
 */
proto.featureStatistics.StringStatistics.prototype.getRankHistogram = function() {
  return /** @type{?proto.featureStatistics.RankHistogram} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.RankHistogram, 5));
};


/**
 * @param {?proto.featureStatistics.RankHistogram|undefined} value
 * @return {!proto.featureStatistics.StringStatistics} returns this
*/
proto.featureStatistics.StringStatistics.prototype.setRankHistogram = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.StringStatistics} returns this
 */
proto.featureStatistics.StringStatistics.prototype.clearRankHistogram = function() {
  return this.setRankHistogram(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.StringStatistics.prototype.hasRankHistogram = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional WeightedStringStatistics weighted_string_stats = 6;
 * @return {?proto.featureStatistics.WeightedStringStatistics}
 */
proto.featureStatistics.StringStatistics.prototype.getWeightedStringStats = function() {
  return /** @type{?proto.featureStatistics.WeightedStringStatistics} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.WeightedStringStatistics, 6));
};


/**
 * @param {?proto.featureStatistics.WeightedStringStatistics|undefined} value
 * @return {!proto.featureStatistics.StringStatistics} returns this
*/
proto.featureStatistics.StringStatistics.prototype.setWeightedStringStats = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.StringStatistics} returns this
 */
proto.featureStatistics.StringStatistics.prototype.clearWeightedStringStats = function() {
  return this.setWeightedStringStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.StringStatistics.prototype.hasWeightedStringStats = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.featureStatistics.WeightedNumericStatistics.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.WeightedNumericStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.WeightedNumericStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.WeightedNumericStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.WeightedNumericStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    mean: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    stdDev: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    median: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    histogramsList: jspb.Message.toObjectList(msg.getHistogramsList(),
    proto.featureStatistics.Histogram.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.WeightedNumericStatistics}
 */
proto.featureStatistics.WeightedNumericStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.WeightedNumericStatistics;
  return proto.featureStatistics.WeightedNumericStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.WeightedNumericStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.WeightedNumericStatistics}
 */
proto.featureStatistics.WeightedNumericStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMean(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStdDev(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMedian(value);
      break;
    case 4:
      var value = new proto.featureStatistics.Histogram;
      reader.readMessage(value,proto.featureStatistics.Histogram.deserializeBinaryFromReader);
      msg.addHistograms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.WeightedNumericStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.WeightedNumericStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.WeightedNumericStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.WeightedNumericStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMean();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getStdDev();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getMedian();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getHistogramsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.featureStatistics.Histogram.serializeBinaryToWriter
    );
  }
};


/**
 * optional double mean = 1;
 * @return {number}
 */
proto.featureStatistics.WeightedNumericStatistics.prototype.getMean = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.WeightedNumericStatistics} returns this
 */
proto.featureStatistics.WeightedNumericStatistics.prototype.setMean = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double std_dev = 2;
 * @return {number}
 */
proto.featureStatistics.WeightedNumericStatistics.prototype.getStdDev = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.WeightedNumericStatistics} returns this
 */
proto.featureStatistics.WeightedNumericStatistics.prototype.setStdDev = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double median = 3;
 * @return {number}
 */
proto.featureStatistics.WeightedNumericStatistics.prototype.getMedian = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.WeightedNumericStatistics} returns this
 */
proto.featureStatistics.WeightedNumericStatistics.prototype.setMedian = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * repeated Histogram histograms = 4;
 * @return {!Array<!proto.featureStatistics.Histogram>}
 */
proto.featureStatistics.WeightedNumericStatistics.prototype.getHistogramsList = function() {
  return /** @type{!Array<!proto.featureStatistics.Histogram>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.featureStatistics.Histogram, 4));
};


/**
 * @param {!Array<!proto.featureStatistics.Histogram>} value
 * @return {!proto.featureStatistics.WeightedNumericStatistics} returns this
*/
proto.featureStatistics.WeightedNumericStatistics.prototype.setHistogramsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.featureStatistics.Histogram=} opt_value
 * @param {number=} opt_index
 * @return {!proto.featureStatistics.Histogram}
 */
proto.featureStatistics.WeightedNumericStatistics.prototype.addHistograms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.featureStatistics.Histogram, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.featureStatistics.WeightedNumericStatistics} returns this
 */
proto.featureStatistics.WeightedNumericStatistics.prototype.clearHistogramsList = function() {
  return this.setHistogramsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.featureStatistics.WeightedStringStatistics.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.WeightedStringStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.WeightedStringStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.WeightedStringStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.WeightedStringStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    topValuesList: jspb.Message.toObjectList(msg.getTopValuesList(),
    proto.featureStatistics.StringStatistics.FreqAndValue.toObject, includeInstance),
    rankHistogram: (f = msg.getRankHistogram()) && proto.featureStatistics.RankHistogram.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.WeightedStringStatistics}
 */
proto.featureStatistics.WeightedStringStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.WeightedStringStatistics;
  return proto.featureStatistics.WeightedStringStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.WeightedStringStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.WeightedStringStatistics}
 */
proto.featureStatistics.WeightedStringStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.featureStatistics.StringStatistics.FreqAndValue;
      reader.readMessage(value,proto.featureStatistics.StringStatistics.FreqAndValue.deserializeBinaryFromReader);
      msg.addTopValues(value);
      break;
    case 2:
      var value = new proto.featureStatistics.RankHistogram;
      reader.readMessage(value,proto.featureStatistics.RankHistogram.deserializeBinaryFromReader);
      msg.setRankHistogram(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.WeightedStringStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.WeightedStringStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.WeightedStringStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.WeightedStringStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTopValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.featureStatistics.StringStatistics.FreqAndValue.serializeBinaryToWriter
    );
  }
  f = message.getRankHistogram();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.featureStatistics.RankHistogram.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StringStatistics.FreqAndValue top_values = 1;
 * @return {!Array<!proto.featureStatistics.StringStatistics.FreqAndValue>}
 */
proto.featureStatistics.WeightedStringStatistics.prototype.getTopValuesList = function() {
  return /** @type{!Array<!proto.featureStatistics.StringStatistics.FreqAndValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.featureStatistics.StringStatistics.FreqAndValue, 1));
};


/**
 * @param {!Array<!proto.featureStatistics.StringStatistics.FreqAndValue>} value
 * @return {!proto.featureStatistics.WeightedStringStatistics} returns this
*/
proto.featureStatistics.WeightedStringStatistics.prototype.setTopValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.featureStatistics.StringStatistics.FreqAndValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.featureStatistics.StringStatistics.FreqAndValue}
 */
proto.featureStatistics.WeightedStringStatistics.prototype.addTopValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.featureStatistics.StringStatistics.FreqAndValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.featureStatistics.WeightedStringStatistics} returns this
 */
proto.featureStatistics.WeightedStringStatistics.prototype.clearTopValuesList = function() {
  return this.setTopValuesList([]);
};


/**
 * optional RankHistogram rank_histogram = 2;
 * @return {?proto.featureStatistics.RankHistogram}
 */
proto.featureStatistics.WeightedStringStatistics.prototype.getRankHistogram = function() {
  return /** @type{?proto.featureStatistics.RankHistogram} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.RankHistogram, 2));
};


/**
 * @param {?proto.featureStatistics.RankHistogram|undefined} value
 * @return {!proto.featureStatistics.WeightedStringStatistics} returns this
*/
proto.featureStatistics.WeightedStringStatistics.prototype.setRankHistogram = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.WeightedStringStatistics} returns this
 */
proto.featureStatistics.WeightedStringStatistics.prototype.clearRankHistogram = function() {
  return this.setRankHistogram(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.WeightedStringStatistics.prototype.hasRankHistogram = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.BytesStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.BytesStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.BytesStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.BytesStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonStats: (f = msg.getCommonStats()) && proto.featureStatistics.CommonStatistics.toObject(includeInstance, f),
    unique: jspb.Message.getFieldWithDefault(msg, 2, 0),
    avgNumBytes: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    minNumBytes: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    maxNumBytes: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.BytesStatistics}
 */
proto.featureStatistics.BytesStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.BytesStatistics;
  return proto.featureStatistics.BytesStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.BytesStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.BytesStatistics}
 */
proto.featureStatistics.BytesStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.featureStatistics.CommonStatistics;
      reader.readMessage(value,proto.featureStatistics.CommonStatistics.deserializeBinaryFromReader);
      msg.setCommonStats(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnique(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAvgNumBytes(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMinNumBytes(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxNumBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.BytesStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.BytesStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.BytesStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.BytesStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonStats();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.featureStatistics.CommonStatistics.serializeBinaryToWriter
    );
  }
  f = message.getUnique();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAvgNumBytes();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getMinNumBytes();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getMaxNumBytes();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
};


/**
 * optional CommonStatistics common_stats = 1;
 * @return {?proto.featureStatistics.CommonStatistics}
 */
proto.featureStatistics.BytesStatistics.prototype.getCommonStats = function() {
  return /** @type{?proto.featureStatistics.CommonStatistics} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.CommonStatistics, 1));
};


/**
 * @param {?proto.featureStatistics.CommonStatistics|undefined} value
 * @return {!proto.featureStatistics.BytesStatistics} returns this
*/
proto.featureStatistics.BytesStatistics.prototype.setCommonStats = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.BytesStatistics} returns this
 */
proto.featureStatistics.BytesStatistics.prototype.clearCommonStats = function() {
  return this.setCommonStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.BytesStatistics.prototype.hasCommonStats = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 unique = 2;
 * @return {number}
 */
proto.featureStatistics.BytesStatistics.prototype.getUnique = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.BytesStatistics} returns this
 */
proto.featureStatistics.BytesStatistics.prototype.setUnique = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional float avg_num_bytes = 3;
 * @return {number}
 */
proto.featureStatistics.BytesStatistics.prototype.getAvgNumBytes = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.BytesStatistics} returns this
 */
proto.featureStatistics.BytesStatistics.prototype.setAvgNumBytes = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float min_num_bytes = 4;
 * @return {number}
 */
proto.featureStatistics.BytesStatistics.prototype.getMinNumBytes = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.BytesStatistics} returns this
 */
proto.featureStatistics.BytesStatistics.prototype.setMinNumBytes = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float max_num_bytes = 5;
 * @return {number}
 */
proto.featureStatistics.BytesStatistics.prototype.getMaxNumBytes = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.BytesStatistics} returns this
 */
proto.featureStatistics.BytesStatistics.prototype.setMaxNumBytes = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.StructStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.StructStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.StructStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.StructStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonStats: (f = msg.getCommonStats()) && proto.featureStatistics.CommonStatistics.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.StructStatistics}
 */
proto.featureStatistics.StructStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.StructStatistics;
  return proto.featureStatistics.StructStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.StructStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.StructStatistics}
 */
proto.featureStatistics.StructStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.featureStatistics.CommonStatistics;
      reader.readMessage(value,proto.featureStatistics.CommonStatistics.deserializeBinaryFromReader);
      msg.setCommonStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.StructStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.StructStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.StructStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.StructStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonStats();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.featureStatistics.CommonStatistics.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonStatistics common_stats = 1;
 * @return {?proto.featureStatistics.CommonStatistics}
 */
proto.featureStatistics.StructStatistics.prototype.getCommonStats = function() {
  return /** @type{?proto.featureStatistics.CommonStatistics} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.CommonStatistics, 1));
};


/**
 * @param {?proto.featureStatistics.CommonStatistics|undefined} value
 * @return {!proto.featureStatistics.StructStatistics} returns this
*/
proto.featureStatistics.StructStatistics.prototype.setCommonStats = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.StructStatistics} returns this
 */
proto.featureStatistics.StructStatistics.prototype.clearCommonStats = function() {
  return this.setCommonStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.StructStatistics.prototype.hasCommonStats = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.CommonStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.CommonStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.CommonStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.CommonStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    numNonMissing: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numMissing: jspb.Message.getFieldWithDefault(msg, 2, 0),
    minNumValues: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxNumValues: jspb.Message.getFieldWithDefault(msg, 4, 0),
    avgNumValues: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    totNumValues: jspb.Message.getFieldWithDefault(msg, 8, 0),
    numValuesHistogram: (f = msg.getNumValuesHistogram()) && proto.featureStatistics.Histogram.toObject(includeInstance, f),
    weightedCommonStats: (f = msg.getWeightedCommonStats()) && proto.featureStatistics.WeightedCommonStatistics.toObject(includeInstance, f),
    featureListLengthHistogram: (f = msg.getFeatureListLengthHistogram()) && proto.featureStatistics.Histogram.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.CommonStatistics}
 */
proto.featureStatistics.CommonStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.CommonStatistics;
  return proto.featureStatistics.CommonStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.CommonStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.CommonStatistics}
 */
proto.featureStatistics.CommonStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumNonMissing(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumMissing(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMinNumValues(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxNumValues(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAvgNumValues(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotNumValues(value);
      break;
    case 6:
      var value = new proto.featureStatistics.Histogram;
      reader.readMessage(value,proto.featureStatistics.Histogram.deserializeBinaryFromReader);
      msg.setNumValuesHistogram(value);
      break;
    case 7:
      var value = new proto.featureStatistics.WeightedCommonStatistics;
      reader.readMessage(value,proto.featureStatistics.WeightedCommonStatistics.deserializeBinaryFromReader);
      msg.setWeightedCommonStats(value);
      break;
    case 9:
      var value = new proto.featureStatistics.Histogram;
      reader.readMessage(value,proto.featureStatistics.Histogram.deserializeBinaryFromReader);
      msg.setFeatureListLengthHistogram(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.CommonStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.CommonStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.CommonStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.CommonStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumNonMissing();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getNumMissing();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getMinNumValues();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getMaxNumValues();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getAvgNumValues();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getTotNumValues();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getNumValuesHistogram();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.featureStatistics.Histogram.serializeBinaryToWriter
    );
  }
  f = message.getWeightedCommonStats();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.featureStatistics.WeightedCommonStatistics.serializeBinaryToWriter
    );
  }
  f = message.getFeatureListLengthHistogram();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.featureStatistics.Histogram.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 num_non_missing = 1;
 * @return {number}
 */
proto.featureStatistics.CommonStatistics.prototype.getNumNonMissing = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.CommonStatistics} returns this
 */
proto.featureStatistics.CommonStatistics.prototype.setNumNonMissing = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 num_missing = 2;
 * @return {number}
 */
proto.featureStatistics.CommonStatistics.prototype.getNumMissing = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.CommonStatistics} returns this
 */
proto.featureStatistics.CommonStatistics.prototype.setNumMissing = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 min_num_values = 3;
 * @return {number}
 */
proto.featureStatistics.CommonStatistics.prototype.getMinNumValues = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.CommonStatistics} returns this
 */
proto.featureStatistics.CommonStatistics.prototype.setMinNumValues = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 max_num_values = 4;
 * @return {number}
 */
proto.featureStatistics.CommonStatistics.prototype.getMaxNumValues = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.CommonStatistics} returns this
 */
proto.featureStatistics.CommonStatistics.prototype.setMaxNumValues = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional float avg_num_values = 5;
 * @return {number}
 */
proto.featureStatistics.CommonStatistics.prototype.getAvgNumValues = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.CommonStatistics} returns this
 */
proto.featureStatistics.CommonStatistics.prototype.setAvgNumValues = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional uint64 tot_num_values = 8;
 * @return {number}
 */
proto.featureStatistics.CommonStatistics.prototype.getTotNumValues = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.CommonStatistics} returns this
 */
proto.featureStatistics.CommonStatistics.prototype.setTotNumValues = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional Histogram num_values_histogram = 6;
 * @return {?proto.featureStatistics.Histogram}
 */
proto.featureStatistics.CommonStatistics.prototype.getNumValuesHistogram = function() {
  return /** @type{?proto.featureStatistics.Histogram} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.Histogram, 6));
};


/**
 * @param {?proto.featureStatistics.Histogram|undefined} value
 * @return {!proto.featureStatistics.CommonStatistics} returns this
*/
proto.featureStatistics.CommonStatistics.prototype.setNumValuesHistogram = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.CommonStatistics} returns this
 */
proto.featureStatistics.CommonStatistics.prototype.clearNumValuesHistogram = function() {
  return this.setNumValuesHistogram(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.CommonStatistics.prototype.hasNumValuesHistogram = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional WeightedCommonStatistics weighted_common_stats = 7;
 * @return {?proto.featureStatistics.WeightedCommonStatistics}
 */
proto.featureStatistics.CommonStatistics.prototype.getWeightedCommonStats = function() {
  return /** @type{?proto.featureStatistics.WeightedCommonStatistics} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.WeightedCommonStatistics, 7));
};


/**
 * @param {?proto.featureStatistics.WeightedCommonStatistics|undefined} value
 * @return {!proto.featureStatistics.CommonStatistics} returns this
*/
proto.featureStatistics.CommonStatistics.prototype.setWeightedCommonStats = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.CommonStatistics} returns this
 */
proto.featureStatistics.CommonStatistics.prototype.clearWeightedCommonStats = function() {
  return this.setWeightedCommonStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.CommonStatistics.prototype.hasWeightedCommonStats = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Histogram feature_list_length_histogram = 9;
 * @return {?proto.featureStatistics.Histogram}
 */
proto.featureStatistics.CommonStatistics.prototype.getFeatureListLengthHistogram = function() {
  return /** @type{?proto.featureStatistics.Histogram} */ (
    jspb.Message.getWrapperField(this, proto.featureStatistics.Histogram, 9));
};


/**
 * @param {?proto.featureStatistics.Histogram|undefined} value
 * @return {!proto.featureStatistics.CommonStatistics} returns this
*/
proto.featureStatistics.CommonStatistics.prototype.setFeatureListLengthHistogram = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.featureStatistics.CommonStatistics} returns this
 */
proto.featureStatistics.CommonStatistics.prototype.clearFeatureListLengthHistogram = function() {
  return this.setFeatureListLengthHistogram(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.featureStatistics.CommonStatistics.prototype.hasFeatureListLengthHistogram = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.featureStatistics.Histogram.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.Histogram.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.Histogram.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.Histogram} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.Histogram.toObject = function(includeInstance, msg) {
  var f, obj = {
    numNan: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numUndefined: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bucketsList: jspb.Message.toObjectList(msg.getBucketsList(),
    proto.featureStatistics.Histogram.Bucket.toObject, includeInstance),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    name: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.Histogram}
 */
proto.featureStatistics.Histogram.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.Histogram;
  return proto.featureStatistics.Histogram.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.Histogram} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.Histogram}
 */
proto.featureStatistics.Histogram.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumNan(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumUndefined(value);
      break;
    case 3:
      var value = new proto.featureStatistics.Histogram.Bucket;
      reader.readMessage(value,proto.featureStatistics.Histogram.Bucket.deserializeBinaryFromReader);
      msg.addBuckets(value);
      break;
    case 4:
      var value = /** @type {!proto.featureStatistics.Histogram.HistogramType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.Histogram.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.Histogram.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.Histogram} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.Histogram.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumNan();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getNumUndefined();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getBucketsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.featureStatistics.Histogram.Bucket.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.featureStatistics.Histogram.HistogramType = {
  STANDARD: 0,
  QUANTILES: 1
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.Histogram.Bucket.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.Histogram.Bucket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.Histogram.Bucket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.Histogram.Bucket.toObject = function(includeInstance, msg) {
  var f, obj = {
    lowValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    highValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    deprecatedCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    sampleCount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.Histogram.Bucket}
 */
proto.featureStatistics.Histogram.Bucket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.Histogram.Bucket;
  return proto.featureStatistics.Histogram.Bucket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.Histogram.Bucket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.Histogram.Bucket}
 */
proto.featureStatistics.Histogram.Bucket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLowValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHighValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeprecatedCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSampleCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.Histogram.Bucket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.Histogram.Bucket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.Histogram.Bucket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.Histogram.Bucket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLowValue();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getHighValue();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getDeprecatedCount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getSampleCount();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double low_value = 1;
 * @return {number}
 */
proto.featureStatistics.Histogram.Bucket.prototype.getLowValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.Histogram.Bucket} returns this
 */
proto.featureStatistics.Histogram.Bucket.prototype.setLowValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double high_value = 2;
 * @return {number}
 */
proto.featureStatistics.Histogram.Bucket.prototype.getHighValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.Histogram.Bucket} returns this
 */
proto.featureStatistics.Histogram.Bucket.prototype.setHighValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional uint64 deprecated_count = 3;
 * @return {number}
 */
proto.featureStatistics.Histogram.Bucket.prototype.getDeprecatedCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.Histogram.Bucket} returns this
 */
proto.featureStatistics.Histogram.Bucket.prototype.setDeprecatedCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double sample_count = 4;
 * @return {number}
 */
proto.featureStatistics.Histogram.Bucket.prototype.getSampleCount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.Histogram.Bucket} returns this
 */
proto.featureStatistics.Histogram.Bucket.prototype.setSampleCount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional uint64 num_nan = 1;
 * @return {number}
 */
proto.featureStatistics.Histogram.prototype.getNumNan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.Histogram} returns this
 */
proto.featureStatistics.Histogram.prototype.setNumNan = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 num_undefined = 2;
 * @return {number}
 */
proto.featureStatistics.Histogram.prototype.getNumUndefined = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.Histogram} returns this
 */
proto.featureStatistics.Histogram.prototype.setNumUndefined = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Bucket buckets = 3;
 * @return {!Array<!proto.featureStatistics.Histogram.Bucket>}
 */
proto.featureStatistics.Histogram.prototype.getBucketsList = function() {
  return /** @type{!Array<!proto.featureStatistics.Histogram.Bucket>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.featureStatistics.Histogram.Bucket, 3));
};


/**
 * @param {!Array<!proto.featureStatistics.Histogram.Bucket>} value
 * @return {!proto.featureStatistics.Histogram} returns this
*/
proto.featureStatistics.Histogram.prototype.setBucketsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.featureStatistics.Histogram.Bucket=} opt_value
 * @param {number=} opt_index
 * @return {!proto.featureStatistics.Histogram.Bucket}
 */
proto.featureStatistics.Histogram.prototype.addBuckets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.featureStatistics.Histogram.Bucket, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.featureStatistics.Histogram} returns this
 */
proto.featureStatistics.Histogram.prototype.clearBucketsList = function() {
  return this.setBucketsList([]);
};


/**
 * optional HistogramType type = 4;
 * @return {!proto.featureStatistics.Histogram.HistogramType}
 */
proto.featureStatistics.Histogram.prototype.getType = function() {
  return /** @type {!proto.featureStatistics.Histogram.HistogramType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.featureStatistics.Histogram.HistogramType} value
 * @return {!proto.featureStatistics.Histogram} returns this
 */
proto.featureStatistics.Histogram.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.featureStatistics.Histogram.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.featureStatistics.Histogram} returns this
 */
proto.featureStatistics.Histogram.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.featureStatistics.RankHistogram.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.RankHistogram.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.RankHistogram.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.RankHistogram} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.RankHistogram.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketsList: jspb.Message.toObjectList(msg.getBucketsList(),
    proto.featureStatistics.RankHistogram.Bucket.toObject, includeInstance),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.RankHistogram}
 */
proto.featureStatistics.RankHistogram.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.RankHistogram;
  return proto.featureStatistics.RankHistogram.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.RankHistogram} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.RankHistogram}
 */
proto.featureStatistics.RankHistogram.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.featureStatistics.RankHistogram.Bucket;
      reader.readMessage(value,proto.featureStatistics.RankHistogram.Bucket.deserializeBinaryFromReader);
      msg.addBuckets(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.RankHistogram.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.RankHistogram.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.RankHistogram} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.RankHistogram.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.featureStatistics.RankHistogram.Bucket.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.featureStatistics.RankHistogram.Bucket.prototype.toObject = function(opt_includeInstance) {
  return proto.featureStatistics.RankHistogram.Bucket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.featureStatistics.RankHistogram.Bucket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.RankHistogram.Bucket.toObject = function(includeInstance, msg) {
  var f, obj = {
    lowRank: jspb.Message.getFieldWithDefault(msg, 1, 0),
    highRank: jspb.Message.getFieldWithDefault(msg, 2, 0),
    deprecatedCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    label: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sampleCount: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.featureStatistics.RankHistogram.Bucket}
 */
proto.featureStatistics.RankHistogram.Bucket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.featureStatistics.RankHistogram.Bucket;
  return proto.featureStatistics.RankHistogram.Bucket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.featureStatistics.RankHistogram.Bucket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.featureStatistics.RankHistogram.Bucket}
 */
proto.featureStatistics.RankHistogram.Bucket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLowRank(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHighRank(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeprecatedCount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSampleCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.featureStatistics.RankHistogram.Bucket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.featureStatistics.RankHistogram.Bucket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.featureStatistics.RankHistogram.Bucket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.featureStatistics.RankHistogram.Bucket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLowRank();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getHighRank();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getDeprecatedCount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSampleCount();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional uint64 low_rank = 1;
 * @return {number}
 */
proto.featureStatistics.RankHistogram.Bucket.prototype.getLowRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.RankHistogram.Bucket} returns this
 */
proto.featureStatistics.RankHistogram.Bucket.prototype.setLowRank = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 high_rank = 2;
 * @return {number}
 */
proto.featureStatistics.RankHistogram.Bucket.prototype.getHighRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.RankHistogram.Bucket} returns this
 */
proto.featureStatistics.RankHistogram.Bucket.prototype.setHighRank = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 deprecated_count = 3;
 * @return {number}
 */
proto.featureStatistics.RankHistogram.Bucket.prototype.getDeprecatedCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.RankHistogram.Bucket} returns this
 */
proto.featureStatistics.RankHistogram.Bucket.prototype.setDeprecatedCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string label = 4;
 * @return {string}
 */
proto.featureStatistics.RankHistogram.Bucket.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.featureStatistics.RankHistogram.Bucket} returns this
 */
proto.featureStatistics.RankHistogram.Bucket.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double sample_count = 5;
 * @return {number}
 */
proto.featureStatistics.RankHistogram.Bucket.prototype.getSampleCount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.featureStatistics.RankHistogram.Bucket} returns this
 */
proto.featureStatistics.RankHistogram.Bucket.prototype.setSampleCount = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * repeated Bucket buckets = 1;
 * @return {!Array<!proto.featureStatistics.RankHistogram.Bucket>}
 */
proto.featureStatistics.RankHistogram.prototype.getBucketsList = function() {
  return /** @type{!Array<!proto.featureStatistics.RankHistogram.Bucket>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.featureStatistics.RankHistogram.Bucket, 1));
};


/**
 * @param {!Array<!proto.featureStatistics.RankHistogram.Bucket>} value
 * @return {!proto.featureStatistics.RankHistogram} returns this
*/
proto.featureStatistics.RankHistogram.prototype.setBucketsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.featureStatistics.RankHistogram.Bucket=} opt_value
 * @param {number=} opt_index
 * @return {!proto.featureStatistics.RankHistogram.Bucket}
 */
proto.featureStatistics.RankHistogram.prototype.addBuckets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.featureStatistics.RankHistogram.Bucket, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.featureStatistics.RankHistogram} returns this
 */
proto.featureStatistics.RankHistogram.prototype.clearBucketsList = function() {
  return this.setBucketsList([]);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.featureStatistics.RankHistogram.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.featureStatistics.RankHistogram} returns this
 */
proto.featureStatistics.RankHistogram.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.featureStatistics);
